import { fetchWeatherApi } from "openmeteo";

export interface Weather {
    temperature: number;
    condition: string;
}

const weatherEmoji: Record<number, string> = {
    0: "‚òÄÔ∏è",
    1: "üå§Ô∏è",
    2: "üå•Ô∏è",
    3: "‚òÅÔ∏è",
    45: "üå´Ô∏è",
    48: "üå´Ô∏è",
    51: "üåßÔ∏è",
    53: "üåßÔ∏è",
    55: "üåßÔ∏è",
    56: "üå®Ô∏è",
    57: "üå®Ô∏è",
    61: "üå¶Ô∏è",
    63: "üåßÔ∏è",
    65: "üåßÔ∏è",
    66: "üåßÔ∏è",
    67: "üåßÔ∏è",
    71: "üå®Ô∏è",
    73: "üå®Ô∏è",
    75: "üå®Ô∏è",
    77: "üå®Ô∏è",
    80: "üå¶Ô∏è",
    81: "üåßÔ∏è",
    82: "üåßÔ∏è",
    85: "üå®Ô∏è",
    86: "üå®Ô∏è",
    95: "üå©Ô∏è",
    96: "‚õàÔ∏è",
    99: "‚õàÔ∏è",
}

export async function fetchWeather(latitude: number, longitude: number, onChange: (weather: Weather | null) => void) {
    const params = {
        latitude: latitude,
        longitude: longitude,
        current: ["weather_code", "temperature_2m"],
    };
    const url = "https://api.open-meteo.com/v1/forecast";
    const responses = await fetchWeatherApi(url, params);
    const current = responses[0].current();
    if (current) {
        const condition = weatherEmoji[current.variables(0)?.value() ?? 0] || "‚ùì";
        const temperature = Math.round(current.variables(1)?.value() ?? 0);
        onChange({ condition, temperature });
    }
}
